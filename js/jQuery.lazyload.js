(function (a, b) { $window = a(b); a.fn.lazyload = function (d) { var c = this; var e = { threshold: 0, failure_limit: 0, event: "scroll", effect: "show", container: b, data_attribute: "original", skip_invisible: false, appear: null, load: null, placeholder: "" }; a.extend(e, d); function f() { var g = 0; c.each(function () { var h = a(this); if (e.skip_invisible && !h.is(":visible")) { return } if (a.abovethetop(this, e) || a.leftofbegin(this, e)) { } else { if (!a.belowthefold(this, e) && !a.rightoffold(this, e)) { h.trigger("appear") } else { } } }) } if (d) { if (undefined !== d.failurelimit) { d.failure_limit = d.failurelimit; delete d.failurelimit } if (undefined !== d.effectspeed) { d.effect_speed = d.effectspeed; delete d.effectspeed } a.extend(e, d) } $container = (e.container === undefined || e.container === b) ? $window : a(e.container); if (0 === e.event.indexOf("scroll")) { $container.bind(e.event, function (g) { return f() }) } this.each(function () { var h = this; var g = a(h); h.loaded = false; if (a.trim(e.placeholder) != "" && (typeof (g.attr("src")) == "undefined" || a.trim(g.attr("src")) == "")) { g.attr("src", e.placeholder) } g.one("appear", function () { if (!this.loaded) { if (e.appear) { var i = c.length; e.appear.call(h, i, e) } a("<img />").bind("load", function () { g.hide().attr("src", g.attr(e.data_attribute))[e.effect](e.effect_speed); h.loaded = true; var k = a.grep(c, function (l) { return !l.loaded }); c = a(k); if (e.load) { var j = c.length; e.load.call(h, j, e) } }).attr("src", g.attr(e.data_attribute)) } }); if (0 !== e.event.indexOf("scroll")) { g.bind(e.event, function (i) { if (!h.loaded) { g.trigger("appear") } }) } }); $window.bind("resize", function (g) { f() }); f(); return this }; a.belowthefold = function (c, e) { var d; if (e.container === undefined || e.container === b) { d = $window.height() + $window.scrollTop() } else { d = $container.offset().top + $container.height() } return d <= a(c).offset().top - e.threshold }; a.rightoffold = function (c, e) { var d; if (e.container === undefined || e.container === b) { d = $window.width() + $window.scrollLeft() } else { d = $container.offset().left + $container.width() } return d <= a(c).offset().left - e.threshold }; a.abovethetop = function (c, e) { var d; if (e.container === undefined || e.container === b) { d = $window.scrollTop() } else { d = $container.offset().top } return d >= a(c).offset().top + e.threshold + a(c).height() }; a.leftofbegin = function (c, e) { var d; if (e.container === undefined || e.container === b) { d = $window.scrollLeft() } else { d = $container.offset().left } return d >= a(c).offset().left + e.threshold + a(c).width() }; a.inviewport = function (c, d) { return !a.rightofscreen(c, d) && !a.leftofscreen(c, d) && !a.belowthefold(c, d) && !a.abovethetop(c, d) }; a.extend(a.expr[":"], { "below-the-fold": function (c) { return a.belowthefold(c, { threshold: 0, container: b }) }, "above-the-top": function (c) { return !a.belowthefold(c, { threshold: 0, container: b }) }, "right-of-screen": function (c) { return a.rightoffold(c, { threshold: 0, container: b }) }, "left-of-screen": function (c) { return !a.rightoffold(c, { threshold: 0, container: b }) }, "in-viewport": function (c) { return !a.inviewport(c, { threshold: 0, container: b }) }, "above-the-fold": function (c) { return !a.belowthefold(c, { threshold: 0, container: b }) }, "right-of-fold": function (c) { return a.rightoffold(c, { threshold: 0, container: b }) }, "left-of-fold": function (c) { return !a.rightoffold(c, { threshold: 0, container: b }) } }) })(jQuery, window);